/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define QWERTY 0
#define NUM 1
#define NAV 2
#define FUN 3

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    macros {
        enye: enye {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp TILDE &kp N>;
        };

        swap_app: swap_app {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LGUI>;
        };

        swap_window: swap_window {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp GRAVE>,
                <&macro_release>,
                <&kp LGUI>;
        };

        tab_left: tab_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "Tab Left";
            bindings = <&kp LGUI &kp LALT &kp LEFT_ARROW>;
        };

        tab_right: tab_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "Tab Right";
            bindings = <&kp LGUI &kp LALT &kp RIGHT_ARROW>;
        };
    };

    behaviors {
        p_apos: p_apos {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp P>, <&kp APOS>;
        };

        enye_shift_semi: enye_shift_semi {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mt RIGHT_SHIFT &enye>, <&kp SEMI>;
        };

        td_copy: td_copy {
            compatible = "zmk,behavior-tap-dance";
            label = "C - Copy";
            #binding-cells = <0>;
            bindings = <&kp C>, <&kp LG(C)>;
        };

        td_cut: td_cut {
            compatible = "zmk,behavior-tap-dance";
            label = "X - Cut";
            #binding-cells = <0>;
            bindings = <&kp X>, <&kp LG(X)>;
        };

        td_paste: td_paste {
            compatible = "zmk,behavior-tap-dance";
            label = "V - Paste";
            #binding-cells = <0>;
            bindings = <&kp V>, <&kp LG(V)>;
        };

        super_bspc: super_backspace {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp LA(BACKSPACE)>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        smart_shft: smart_shift {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LSHFT>, <&caps_word>;

            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            bindings = <
&kp Q             &kp W        &kp E           &kp R           &kp T          &kp Y      &kp U            &kp I            &kp O                &p_apos
&mt LEFT_SHIFT A  &mt LCTRL S  &mt LEFT_ALT D  &mt LEFT_GUI F  &kp G          &kp H      &mt RIGHT_GUI J  &mt RIGHT_ALT K  &mt RIGHT_CONTROL L  &enye_shift_semi
&kp Z             &td_cut      &td_copy        &td_paste       &kp B          &kp N      &kp M            &kp COMMA        &kp DOT              &kp FSLH
                               &kp LGUI        &mo 2           &smart_shft    &kp SPACE  &mo 1            &super_bspc
            >;
        };

        num_layer {
            bindings = <
&kp TILDE             &kp AT          &kp LBRC           &kp RBRC           &kp PRCNT    &kp STAR   &kp N7            &kp N8            &kp N9                &kp MINUS
&mt LEFT_SHIFT CARET  &mt LCTRL HASH  &mt LEFT_ALT LPAR  &mt LEFT_GUI RPAR  &kp DLLR     &kp UNDER  &mt RIGHT_GUI N4  &mt RIGHT_ALT N5  &mt RIGHT_CONTROL N6  &mt RIGHT_SHIFT PLUS
&trans                &kp LT          &kp LBKT           &kp RBKT           &kp GT       &trans     &kp N1            &kp N2            &kp N3                &kp EQUAL
                                      &trans             &trans             &kp N0       &trans     &trans            &trans
            >;
        };

        nav_layer {
            bindings = <
&swap_app  &swap_window  &tab_left  &tab_right  &trans     &trans    &kp HOME  &kp END  &kp TAB    &super_bspc
&sk LSHFT  &sk LCTRL     &sk LALT   &sk LGUI    &kp TAB    &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT  &gresc
&trans     &kp DEL       &trans     &trans      &trans     &trans    &kp RET   &trans   &trans     &trans
                         &trans     &trans      &trans     &trans    &trans    &trans
            >;
        };

        fun_layer {
            bindings = <
&trans        &kp K_MUTE    &kp C_VOL_DN  &kp C_VOL_UP  &out OUT_TOG    &trans  &kp F7  &kp F8  &kp F9  &kp F12
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &kp F4  &kp F5  &kp F6  &kp F11
&bt BT_CLR    &kp C_PREV    &kp C_PP      &kp C_NEXT    &trans          &trans  &kp F1  &kp F2  &kp F3  &kp F10
                            &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };
};
